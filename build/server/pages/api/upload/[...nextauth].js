"use strict";(()=>{var a={};a.id=90,a.ids=[90],a.modules={363:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.d(b,{A:()=>o,N:()=>n});var e=c(5542),f=c.n(e),g=c(6382),h=c.n(g),i=c(8689),j=c(6330),k=c(3139),l=a([k]);k=(l.then?(await l)():l)[0];let m=globalThis.prisma;m||(m=new j.PrismaClient);let n={adapter:(0,i.PrismaAdapter)(m),providers:[h()({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(a){try{if(!a?.email||!a?.password)throw Error("邮箱和密码不能为空");let b=await m.user.findUnique({where:{email:a.email}});if(!b)throw Error("用户不存在");if(!b.password)throw Error("用户密码未设置");if(!await k.default.compare(a.password,b.password))throw Error("密码错误");return{id:b.id,email:b.email,name:b.name}}catch(a){return console.error("认证错误:",a.message),null}}})],session:{strategy:"jwt",maxAge:2592e3},pages:{signIn:"/auth/signin",signUp:"/auth/signup",error:"/auth/error"},callbacks:{jwt:async({token:a,user:b})=>(b&&(a.id=b.id),a),session:async({session:a,token:b})=>(b&&(a.user.id=b.id),a)},debug:!1},o=f()(n);d()}catch(a){d(a)}})},1043:a=>{a.exports=require("@aws-sdk/client-s3")},3139:a=>{a.exports=import("bcryptjs")},3620:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>m,default:()=>j});var e=c(5806),f=c(6330),g=c(1043),h=c(363),i=a([h]);h=(i.then?(await i)():i)[0];let k=new f.PrismaClient,l=new g.S3Client({region:process.env.AWS_REGION,credentials:{accessKeyId:process.env.AWS_ACCESS_KEY_ID,secretAccessKey:process.env.AWS_SECRET_ACCESS_KEY}});async function j(a,b){let c=await (0,e.getServerSession)(a,b,h.N);if(!c)return b.status(401).json({error:"Unauthorized"});if("POST"!==a.method)return b.status(405).json({error:"Method not allowed"});try{let d=(await a.formData()).get("file");if(!d)return b.status(400).json({error:"No file provided"});let e=Buffer.from(await d.arrayBuffer()),f=`uploads/${c.user.id}/${Date.now()}-${d.name}`,h=new g.PutObjectCommand({Bucket:process.env.AWS_BUCKET_NAME,Key:f,Body:e,ContentType:d.type});await l.send(h);let i=`https://${process.env.AWS_BUCKET_NAME}.s3.${process.env.AWS_REGION}.amazonaws.com/${f}`,j=await k.file.create({data:{userId:parseInt(c.user.id),filename:d.name,key:f,size:d.size,mimeType:d.type,url:i}});b.status(200).json({message:"File uploaded successfully",file:j})}catch(a){console.error("Upload error:",a),b.status(500).json({error:"Failed to upload file"})}}let m={api:{bodyParser:!1}};d()}catch(a){d(a)}})},5542:a=>{a.exports=require("next-auth")},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5806:a=>{a.exports=require("next-auth/next")},6330:a=>{a.exports=require("@prisma/client")},6382:a=>{a.exports=require("next-auth/providers/credentials")},7790:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>m});var e=c(9046),f=c(8667),g=c(3480),h=c(6435),i=c(3620),j=c(8112),k=c(8766),l=a([i]);i=(l.then?(await l)():l)[0];let n=(0,h.M)(i,"default"),o=(0,h.M)(i,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/upload/[...nextauth]",pathname:"/api/upload/[...nextauth]",bundlePath:"",filename:""},userland:i,distDir:"build",relativeProjectDir:""});async function m(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/upload/[...nextauth]"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h,routerServerContext:i}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),l=p.instrumentationOnRequestError.bind(p),m=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/upload/[...nextauth]",internalRevalidate:null==i?void 0:i.revalidate,onError:(...b)=>l(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await m(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},m))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}d()}catch(a){d(a)}})},8689:a=>{a.exports=require("@next-auth/prisma-adapter")}};var b=require("../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=7790));module.exports=c})();